# To learn more about .editorconfig see https://aka.ms/editorconfigdocs

###############################
# Core EditorConfig Options   #
###############################

root = true

# All files
[*]
indent_style = tab
charset = utf-8
insert_final_newline = true
trim_trailing_whitespace = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4
end_of_line = crlf

# Solution, project, config files
[*.{sln,csproj,props,config,json}]
indent_size = 2

# Server Code files
[*.{cs,csx}]
indent_size = 4

# Web Code Files
[*.{ts,js,css,html,cshtml,razor}]
indent_size = 2

# Powershell
[*.{ps1,psm1}]
indent_size = 2

# Markdown
[*.md]
max_line_length = off
trim_trailing_whitespace = false

##################################
# .Force Errors in VS and Builds #
##################################
[*.{cs,csx}]
# Next Line is All Style violations - Examples of specific below Allows for slower and more explicit migration
#dotnet_analyzer_diagnostic.category-Style.severity = suggestion
dotnet_diagnostic.IDE0003.severity = error # Remove this won't break build withou previous entry being enabled see https://github.com/dotnet/roslyn/issues/52694  Only works if Category Style set  or see Build+Intellisense
dotnet_diagnostic.IDE0005.severity = error # Remove Unnecessary usings
dotnet_diagnostic.IDE0007.severity = error # Use var
dotnet_diagnostic.IDE0011.severity = error # Curly Braces when Multiline
dotnet_diagnostic.IDE0016.severity = suggestion # Prefer throw expression
dotnet_diagnostic.IDE0017.severity = error # Use Object Initializers
dotnet_diagnostic.IDE0018.severity = suggestion # Prefer Inline variable declaration
dotnet_diagnostic.IDE0019.severity = suggestion # Pattern matching avoid as with a null check
dotnet_diagnostic.IDE0020.severity = suggestion # Pattern matching over is with variable
dotnet_diagnostic.IDE0022.severity = error # Expression Body for methods
dotnet_diagnostic.IDE0023.severity = error # Expression Body for conversion operators
dotnet_diagnostic.IDE0024.severity = error # Expression Body for operators
dotnet_diagnostic.IDE0025.severity = error # Expression Body for properties
dotnet_diagnostic.IDE0026.severity = error # Expression Body for indexers
dotnet_diagnostic.IDE0027.severity = error # Expression Body for accessors
dotnet_diagnostic.IDE0028.severity = error # Use collection Initializers
dotnet_diagnostic.IDE0029.severity = error # Use coalesce expression (non-nullable)
dotnet_diagnostic.IDE0030.severity = error # Use coalesce expression (nullable)
dotnet_diagnostic.IDE0031.severity = suggestion # Use null propagation
dotnet_diagnostic.IDE0032.severity = suggestion # Prefer Auto Properties
dotnet_diagnostic.IDE0033.severity = error # Use Explicitly provide tuple name
dotnet_diagnostic.IDE0034.severity = suggestion # Simplify 'default' expression
dotnet_diagnostic.IDE0040.severity = error # Require accessibilty modifiers
dotnet_diagnostic.IDE0036.severity = suggestion # order modifiers
dotnet_diagnostic.IDE0037.severity = suggestion # Use inferred member name tuple and anonymous types
dotnet_diagnostic.IDE0039.severity = suggestion # Use local function instead of lambda
dotnet_diagnostic.IDE0041.severity = suggestion # Use is null check over ReferenceEquals
dotnet_diagnostic.IDE0042.severity = suggestion # Prefer deconstruct variable
dotnet_diagnostic.IDE0044.severity = error # Require accessibilty modifiers
dotnet_diagnostic.IDE0045.severity = suggestion # Prefer conditional expression for assignment
dotnet_diagnostic.IDE0046.severity = suggestion # Prefer conditional expression for return
dotnet_diagnostic.IDE0048.severity = error # Add parentheses for clarity
dotnet_diagnostic.IDE0049.severity = error # Prefer language keywords to framework.  ie, int instead of Int32
dotnet_diagnostic.IDE0053.severity = error # Expression Body for lambda
dotnet_diagnostic.IDE0054.severity = suggestion # Use Compound assignment
dotnet_diagnostic.IDE0056.severity = suggestion # Prefer index Operator
dotnet_diagnostic.IDE0057.severity = suggestion # Prefer Range Operator to Substring
dotnet_diagnostic.IDE0058.severity = error # Expression Value is never used aka remove or use discard _
dotnet_diagnostic.IDE0063.severity = suggestion # Prefer simple using.  i.e. no braces
dotnet_diagnostic.IDE0065.severity = none # using directives outside namesapce
dotnet_diagnostic.IDE0066.severity = suggestion # Prefer switch expression
dotnet_diagnostic.IDE0071.severity = error # simplify interpolation
dotnet_diagnostic.IDE0074.severity = suggestion # Use coalesce Compound assignment
dotnet_diagnostic.IDE0075.severity = suggestion # Simplify conditional expression
dotnet_diagnostic.IDE0078.severity = suggestion # Prefer pattern matching
dotnet_diagnostic.IDE0083.severity = suggestion # Prefer pattern matching using not operator
dotnet_diagnostic.IDE0090.severity = suggestion # Simplify `new`
dotnet_diagnostic.IDE0130.severity = error # Namespace Match Folder structure
dotnet_diagnostic.IDE0161.severity = error # Expression Body for local functions
dotnet_diagnostic.IDE1005.severity = suggestion # Prefer conditional delegate call
dotnet_diagnostic.IDE1006.severity = error # Naming Rules

###############################
# .NET Coding Conventions     #
###############################
[*.{cs,csx}]
# Organize usings
dotnet_sort_system_directives_first = true

# this. preferences
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_property = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_event = false

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members
dotnet_style_readonly_field = true

# Expression-level preferences
dotnet_style_object_initializer = true
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = true
dotnet_style_null_propagation = true
dotnet_style_coalesce_expression = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = true

###############################
# Naming Conventions          #
###############################
# Style Definitions
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# Use PascalCase for constant fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = error
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities = *
dotnet_naming_symbols.constant_fields.required_modifiers = const
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_prefer_compound_assignment = true
dotnet_style_prefer_simplified_interpolation = true
dotnet_style_namespace_match_folder = true

###############################
# C# Coding Conventions       #
###############################
[*.{cs,csx}]
csharp_style_namespace_declarations = file_scoped

# var preferences
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true
csharp_style_var_elsewhere = true

# Expression-bodied members
csharp_style_expression_bodied_methods = true
csharp_style_expression_bodied_constructors = false
csharp_style_expression_bodied_operators = true
csharp_style_expression_bodied_properties = true
csharp_style_expression_bodied_indexers = true
csharp_style_expression_bodied_accessors = true
csharp_style_expression_bodied_lambdas = true
csharp_style_expression_bodied_local_functions = true

#Unused Value
csharp_style_unused_value_expression_statement_preference = discard_variable

# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_prefer_switch_expression = true
csharp_style_prefer_pattern_matching = true
csharp_style_prefer_not_pattern = true

# Null-checking preferences
csharp_style_throw_expression = true
csharp_style_conditional_delegate_call = true

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Expression-level preferences
csharp_prefer_braces = when_multiline
csharp_style_deconstructed_variable_declaration = true
csharp_prefer_simple_default_expression = true
csharp_style_pattern_local_over_anonymous_function = true
csharp_style_inlined_variable_declaration = true

###############################
# C# Formatting Rules         #
###############################
# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_block_contents = true
csharp_indent_labels = flush_left

# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true
csharp_using_directive_placement = outside_namespace
csharp_prefer_simple_using_statement = true
csharp_style_prefer_index_operator = true
csharp_style_prefer_range_operator = true
csharp_style_implicit_object_creation_when_type_is_apparent = true
csharp_style_prefer_tuple_swap = true


